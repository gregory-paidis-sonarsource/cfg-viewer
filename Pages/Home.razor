@page "/"
@inject IJSRuntime JS

<PageTitle>VisualCFG</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-4">
            <h4>C#</h4>
            <StandaloneCodeEditor Id="editor42"
                                  ConstructionOptions="EditorConstructionOptions"
                                  OnDidChangeModelContent="OnCodeSnippetChanged" />
        </div>
        <div class="col-8">
            <h4>CFG</h4>
            <div id="graphContainer" class="half-screen"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <h4>Diagnostics</h4>
            <textarea @bind="diagnostics" class="form-control" rows="5" placeholder="No diagnostics raised. Good work!"></textarea>
        </div>
    </div>
</div>

@code {
    private string diagnostics = string.Empty;
    private StandaloneCodeEditor myEditor;

    private StandaloneEditorConstructionOptions EditorConstructionOptions(StandaloneCodeEditor editor)
    {
        myEditor = editor;
        return new StandaloneEditorConstructionOptions
            {
                AutomaticLayout = true,
                Language = "csharp",
                Value = string.Empty,
                BracketPairColorization = new BracketPairColorizationOptions { Enabled = true, IndependentColorPoolPerBracketType = true },
            };
    }

    private async Task OnCodeSnippetChanged()
    {
        var codeSnippet = await myEditor.GetValue();
        var either = Compiler.CompileCfg(codeSnippet);
        if (either.HasResult)
        {
            diagnostics = string.Empty;
            await JS.InvokeVoidAsync("d3GraphInterop", "graphContainer", either.Result);
        }
        else
        {
            diagnostics = either.Error.ToPrettyString();
        }
    }
}
